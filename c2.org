* 2.1

 #+BEGIN_SRC mips
           addi        $s0, $s2, -5
           add         $s0, $s0, $s1
 #+END_SRC

* 2.2

#+BEGIN_SRC C
  f = g + h; 
  f += i;
#+END_SRC

* 2.3

#+BEGIN_SRC mips
        sub         $t0, $s3, $s4
        sll         $t0, $t0, 2
        add         $t0, $t0, $s6
        lw          $t0, 0($t0)
        sw          $t0, 32($s7)
#+END_SRC

* 2.4

#+BEGIN_SRC c
B[g] = A[f] + A[f+1]
#+END_SRC

* 2.5

#+BEGIN_SRC mips
          lw          $s0, 0($t0)
          lw          $t0, 4($t0)
          add         $t0, $t0, $s0
          sw          $t0, 0($t1)
#+END_SRC

* 2.6

#+BEGIN_SRC c
  int temp1 = Array[0];
  int temp2 = Array[1];
  Array[0] = Array[4];
  Array[1] = temp1;
  Array[4] = Array[3];
  Array[3] = temp2;
#+END_SRC

#+BEGIN_SRC mips
          lw          $s0, 0($s6)
          lw          $s1, 4($s6)
          lw          $s3, 12($s6)
          lw          $s4, 16($s6)
          sw          $s4, 0($s6)
          sw          $s0, 4($s6)
          sw          $s1, 12($s6)
          sw          $s3, 16($s6)
#+END_SRC

* 2.7

Big endian:

0: ab
1: cd
2: ef
3: 12

* 2.8

#+BEGIN_SRC lua :results output
  # 0xabcdef12
  sum = 0
  n = {2, 1, 15, 14, 13, 12, 11, 10}
  for i, v in ipairs(n) do
     sum = sum + v * (1 << (i - 1 << 2))
  end
  print( sum )
#+END_SRC

#+RESULTS:
: 2882400018




